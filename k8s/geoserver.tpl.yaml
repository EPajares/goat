apiVersion: v1
kind: Namespace
metadata:
  name: ${NAMESPACE}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: goat-geoserver
  namespace: ${NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: goat-geoserver
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 50%
  minReadySeconds: 15
  template:
    metadata:
      labels:
        app: goat-geoserver
    spec:
      containers:
      - image: ${DOCKER_IMAGE}
        imagePullPolicy: IfNotPresent
        name: goat-geoserver
        volumeMounts:
        - name: datastore-xml
          mountPath: /var/local/geoserver/workspaces/cite/database/datastore.xml
          subPath: datastore.xml
        ports:
        - containerPort: 8080
        resources:
          requests:
            memory: 1Gi
            cpu: 200m
          limits:
            memory: 2Gi
            cpu: 300m
      volumes:
      - name: datastore-xml
        configMap:
          name: datastore-xml
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
  name: goat-geoserver
  namespace: ${NAMESPACE}
spec:
  rules:
    - host: ${DOMAIN}
      http:
        paths:
          - backend:
              serviceName: goat-geoserver
              servicePort: 80
            path: /geoserver
  tls:
  - hosts:
    - ${DOMAIN}
    secretName: letsencrypt-prod
---
apiVersion: v1
kind: Service
metadata:
  name: goat-geoserver
  namespace: ${NAMESPACE}
spec:
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
  type: NodePort
  selector:
    app: goat-geoserver
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: datastore-xml
  namespace: ${NAMESPACE}
data:
  datastore.xml: |
    <dataStore>
      <id>DataStoreInfoImpl-2e5aa5e1:15bf8a8db86:-7fff</id>
      <name>database</name>
      <type>PostGIS</type>
      <enabled>true</enabled>
      <workspace>
        <id>WorkspaceInfoImpl--570ae188:124761b8d78:-7ff3</id>
      </workspace>
      <connectionParameters>
        <entry key=\"schema\">public</entry>
        <entry key=\"Evictor run periodicity\">300</entry>
        <entry key=\"Max open prepared statements\">50</entry>
        <entry key=\"encode functions\">false</entry>
        <entry key=\"Batch insert size\">1</entry>
        <entry key=\"preparedStatements\">false</entry>
        <entry key=\"database\">${POSTGRES_DB}</entry>
        <entry key=\"host\">postgres.postgres.svc.cluster.local</entry>
        <entry key=\"Loose bbox\">true</entry>
        <entry key=\"Estimated extends\">true</entry>
        <entry key=\"fetch size\">1000</entry>
        <entry key=\"Expose primary keys\">true</entry>
        <entry key=\"validate connections\">true</entry>
        <entry key=\"Support on the fly geometry simplification\">true</entry>
        <entry key=\"Connection timeout\">20</entry>
        <entry key=\"create database\">false</entry>
        <entry key=\"port\">5432</entry>
        <entry key=\"passwd\">plain:${POSTGRES_PASSWORD}</entry>
        <entry key=\"min connections\">1</entry>
        <entry key=\"dbtype\">postgis</entry>
        <entry key=\"namespace\">muc</entry>
        <entry key=\"max connections\">10</entry>
        <entry key=\"Evictor tests per run\">3</entry>
        <entry key=\"Test while idle\">true</entry>
        <entry key=\"user\">${POSTGRES_USER}</entry>
        <entry key=\"Max connection idle time\">300</entry>
      </connectionParameters>
      <__default>false</__default>
    </dataStore>